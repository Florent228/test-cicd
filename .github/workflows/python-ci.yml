name: Python Application CI

on:
  push:
    branches: [ dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Test with unittest
      run: |
        python -m unittest discover tests

  push-to-master-on-success:
    needs: build-and-test
    if: success()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'dev'
    - name: Push to master
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git checkout master
        git merge --ff-only dev
        git push origin master

  create-failure-branch:
    needs: build-and-test
    if: failure()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create Failure Branch
      env:
        ACCESS_TOKEN: ${{ secrets.MY_PAT }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        FAILURE_BRANCH="failure-$(date +%Y-%m-%d-%H-%M-%S)"
        git checkout -b $FAILURE_BRANCH
        git push --force https://${ACCESS_TOKEN}@github.com/${{ github.repository }} $FAILURE_BRANCH
